{
    "collab_server" : "",
    "contents" : "rm(list=ls(all=TRUE))\n\nlibrary(glmnet)\nsource('~/machine_learning/dicyclic_gmp/snp_selection/di_ci_gmp_data.R')\ntg<-t(snp.by.gene.uniq[[49]])#2 dim 3 by 30\nt<-m.cdgmp\nx<-tg#for testing purposes\nc.lasso<-function(x){\nexit\n  eix\nsplit<-sample(nrow(x), floor(0.7*nrow(x)))\ntrain.d<-as.matrix(cbind(x,t)[split,])\ntest.d<-as.matrix(cbind(x,t)[-split,])\ntrain.m<-train.d[,-ncol(train.d)]\ntarget<-train.d[,ncol(train.d)]\ntarget<-abs(target)\nfit <- glmnet(train.m, target, family = \"poisson\")\ncv<-cv.glmnet(train.m,target,nfolds = 10)#cross_validate to get the best lambda\npred<-predict(fit, train.m, type=\"response\",s=cv$lambda.min)#predict\nreturn(list(fit=fit,cv=cv,pred=pred ))\n}\nplot(cv)\noutput<-lapply(snp.by.gene.uniq, function(x){\n  ac<-c.lasso(t(x))\n  print(ac)\n})\nstr(output)\n\npar(mfrow=c(2,5))  \npar(mar=c(.1,.1,.1,.1))\npar(mai=c(8,8))\npar(maa)\noutput$fit\nlasso_plots<-function(x,s){\n  lapply(snp.by.gene.uniq, function(x){\n    x<-t(x)\n    \n\n    i=parent.frame()$i[]\n    split<-sample(nrow(x), floor(0.7*nrow(x)))\n    train.d<-as.matrix(cbind(x,t)[split,])\n    test.d<-as.matrix(cbind(x,t)[-split,])\n        train.m<-train.d[,-ncol(train.d)]\n    target<-train.d[,ncol(train.d)]\n    target<-abs(target)\n    fit <- glmnet(train.m, target, family = \"poisson\")\n    cv<-cv.glmnet(train.m,target,nfolds = 10)#cross_validate to get the best lambda\n    pred<-predict(fit, train.m, type=\"response\",s=cv$lambda.min)#p\n    \n#    snps<-nrow(x)[i]\n    #    snps<-nrow(x[i])\n    print(ncol(x))\n    plot(fit, label = TRUE) \n    title(paste(\"Gene\",i,\"SNPS\",ncol(x)),line = +2)\n\n    #return(plot(fit, label = TRUE, main=c(paste(\"gene\",i),paste(\"SNPS\",ncol(x)))))\n#    return(plot(fit, label = TRUE, main=c(paste(\"Gene\",i,\"SNPS\",ncol(x) ))))\n        #return(plot(fit, label = TRUE) , title( main=c(paste(\"Gene\",i,\"SNPS\",ncol(x) )), line = +1))\n    #title( main=c(paste(\"Gene\",i,\"SNPS\",ncol(x) )), line = +1)\n#    return(plot(fit, label = TRUE, main=c(paste(\"gene\",i),paste(\"SNPS\",snps)))\n    i<-i+1\n})\n\n}\n\n\npar(mfrow=c(2,5))  \n#par(mai=c(1,1))  \nlasso_plots(snp.by.gene.uniq)    \ndev.off()\n\nreturn(plot(\n      \n      tsne(d.gene,initial_dims=nrow(x), perplexity = 2), main=c(paste(\"gene \",i), \n                                                                          paste(\"SNPS\",nrow(x)))\n\nlapply()\ncv\nfit\nplot(fit$beta,ylab=expression(beta),)\nplot(fit, label = TRUE)\n\nplot(fit$a0)\n#summary(fit)\n\nfit$beta\n\nplot(cv)\nplot(fit, xvar = \"lambda\", label = TRUE)\nplot(fit, xvar = \"dev\", label = TRUE)\n\n\n\nlibrary(plotmo) # for plotres\nplotres(fit)\ndev.off()\n#par(mar=c(4.5,4.5,1,4))\n\nplot(pred[,1], target)\nabline(lm( target ~ pred[,1]), col=2)\nsummary(lm( target ~ pred[,1]))\nr<-cor.test(pred[,1], target)\nr$parameter\nr$p.value\nr$estimate\n\n\npred[,1]\npred\n\nvnat\nvnat=coef(fit)\nvnat=vnat[-1,ncol(vnat)] # remove the intercept, and get the coefficients at the end of the path\nvn=paste(\"var\",1:24)\naxis(4, at=vnat,line=-.5,label=vn,las=1,tick=FALSE, cex.axis=0.5)\npred\ntarget\nresult.difference<-pred-target\nresult.difference\n#result.difference  \n\n\ncv\nggplot\nlattice , coefficients, \npredicted-target -gene\n\n\n\n\nplot(pred[,1], target)\nabline(lm( target ~ pred[,1]), col=2)\nsummary(lm( target ~ pred[,1]))\ncor.test(pred[,1], target)\npred[1,]\ntarget-pred\n\nopt.lam = c(cv$lambda.min, cv$lambda.1se)\ncoef(cv, s = opt.lam)\n# \n# \n# lm_corr_plot<-function(x,s){\n#   lapply(snp.by.gene.uniq, function(x){\n#     x<-t(x)\n#     \n#     i=parent.frame()$i[]\n#     split<-sample(nrow(x), floor(0.7*nrow(x)))\n#     train.d<-as.matrix(cbind(x,t)[split,])\n#     test.d<-as.matrix(cbind(x,t)[-split,])\n#     train.m<-train.d[,-ncol(train.d)]\n#     target<-train.d[,ncol(train.d)]\n#     target<-abs(target)\n#     fit <- glmnet(train.m, target, family = \"poisson\")\n#     cv<-cv.glmnet(train.m,target,nfolds = 10)#cross_validate to get the best lambda\n#     pred<-predict(fit, train.m, type=\"response\",s=cv$lambda.min)\n#     plot(pred[,1], target)\n#     tryCatch(\n#       title(paste(\"Gene\",i,\"SNPS\",ncol(x)),line = +2)\n#       abline(lm( target ~ pred[,1]), col=2)\n#       ,err=function(e) NULL\n#     )\n#     #summary(lm( target ~ pred[,1]))\n#     #r<-cor.test(pred[,1], target)\n#     #r$parameter\n#     #r$p.value\n#     #r$estimate\n#     \n#     #plot(fit, label = TRUE) \n#     #title(paste(\"Gene\",i,\"SNPS\",ncol(x)),line = +2)\n#     i<-i+1\n#     \n#   })\n#   \n# }\n# lm_corr_plot(snp.by.gene.uniq)",
    "created" : 1501847091238.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1661378371",
    "id" : "74CECAAC",
    "lastKnownWriteTime" : 1502029598,
    "last_content_update" : 1502029598781,
    "path" : "~/machine_learning/dicyclic_gmp/snp_selection/lasso_4.R",
    "project_path" : "lasso_4.R",
    "properties" : {
        "source_window_id" : "wlb9adb3i4dba",
        "tempName" : "Untitled4"
    },
    "relative_order" : 14,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}