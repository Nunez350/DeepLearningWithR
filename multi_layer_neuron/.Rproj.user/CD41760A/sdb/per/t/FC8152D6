{
    "collab_server" : "",
    "contents" : "rm(list=ls(all=TRUE))\ndev.off()\n#Single neuron Classifier\ni3<-which(iris$Species == \"versicolor\"| iris$Species == \"virginica\")\nx<-iris[i3,c(1,3,5) ]\nt <- c(rep(0,50),rep(1,50))#target\nw<-runif(2, 1e-3, 1e-2)#random weights\nw1=w[1];w2=w[2]\nb<-runif(1)#random bias\nx1<- x$Sepal.Length; x2<- x$Petal.Length#separating each feature\neta=0.1# #the learning rate\nweights1<-list();weights2<-list(); bias.list<-list(); tacc<-list();e.list<-list()\n\nfor (generation in 1:10000){\n  a=x1 * w1 + x2*w2\n  y=1/(1+exp(-a-b))#the sigmoid function which   normalizes the weighted sum of the inputs\n  e=t-y#calculates the error. Difference between the desired and predicted output\n  g1= -e * x1\n  g2= -e * x2\n  g.bias = -e\n  w1=w1 -eta * sum(g1)\n  w2=w2 -eta * sum(g2)\n  weights1[generation] <-w1\n  weights2[generation] <-w2\n  b = b - eta * sum(g.bias)\n  bias.list[generation]<-b\n  ncp<-length(which(abs(e) < 0.05))#number of predicted targets below erroe threshold\n  tac<-ncp/100 #predicted target accuracy rate\n  tacc[generation]<-tac\n}\n#rm(list=ls(all=TRUE))\n#output<- data.frame(weights1=unlist(weights1), weights2=unlist(weights2),errors=unlist(bias.list))\nweights1\n#plotting changes of weights over epoch\nplot(1:10000,weights1, ylim=c(-200,200), col=\"red\", ylab= \"weights\", xlab=\"Epochs\" )\nlines(1:10000,weights2, col=\"blue\")\n\n#using weight and bias to predict species \nl.bias<- as.numeric(bias.list[10000])\nfw1<-as.numeric(weights1[10000]); fw2<-as.numeric(weights2[10000])\ny=1/(1+exp(-(fw1*x1 + fw2 * x2 + l.bias)))\nround(y,1)\nweights1[10000]\n#target accuracy at each iteration\nplot(1:10000,tacc)\n#tacc\n#classifing two species\n#class.species<-function(){\n\n  sp0<-x[which(x$Species == \"versicolor\"),]\n  sp1<-x[which(x$Species == \"virginica\"),]\n  plot(sp0$Sepal.Length, sp0$Petal.Length, col=\"red\", ylim = c(2.8,6.4), ylab = \"Petal length\", xlab=\"Sepal length\")\n  points(sp1$Sepal.Length, sp1$Petal.Length, col=\"blue\")\n  legend(\"topleft\", legend = c(\"versicolor\",\"virginica\"), col=c(\"red\",\"blue\"),pch=1, horiz = F, cex = .8) \n  slope=-(w1/w2)\n  intercept=-b/w2\n  abline(slope,intercept, col=\"black\")\n#}\nabline()\nintercept\nclass.species()\n?abline\n",
    "created" : 1498673410085.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1638295604",
    "id" : "FC8152D6",
    "lastKnownWriteTime" : 1498216766,
    "last_content_update" : 1498216766,
    "path" : "~/machine_learning/neural_networks/single_neuron_classifier_iris.R",
    "project_path" : null,
    "properties" : {
        "source_window_id" : ""
    },
    "relative_order" : 7,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}