i3<-which(iris$Species == "versicolor"| iris$Species == "virginica")
x<-iris[i3,c(1,3) ]
x
x<-iris[i3,c(1,3) ]
t <- c(rep(0,50),rep(1,50))
w<-runif(2, 1e-3, 1e-2)
b<-runif(1)
i=2
a=sum(x[i] * w[i])
a
y=1/(1+exp(-a-b))
eta=0.1
e=y-t
g[i]= -e * x[i]; w[i]=w[i] - eta * g[i]
e
g[i]= -e * x[i]; w[i]=w[i] - eta * g[i]
eta
L=1000
g[i]= -e * x[i]; w[i]=w[i] - eta * g[i]
g[i]= -e * x[i]
w[i]= w[i] - eta * g[i]
source('~/qui_lab/monte_carlo_club/single-neuron-classifier.R', echo=TRUE)
g[i]
eta
w[i]
w[i]= w[i] - eta * g[i]
eta
w[i]= w[i] - eta
g[i]= -e * x[i]
w[i]= w[i] - eta
w[i]= w[i] - eta * g[i]
w[i]= w[i] - (eta * g[i])
eta * g[i]
eta
g[i]
class(g[i])
x
t <- c(rep(0,50),rep(1,50))
w<-runif(2, 1e-3, 1e-2)
b<-runif(1)
i=2
a=sum(x[i] * w[i])
y=1/(1+exp(-a-b))
eta=0.1
e=y-t
g[i]= -e * x[i]
w[i]= w[i] - (eta * g[i])
t
w
b
i
a
y
eta
alldata[[2]][[1]][[3]]$Percent.Dead.Category
alldata[[2]][[1]][[3]]$FlowJoPercentDead
alldata[[2]][[1]][[3]]$Percent.Dead
alldata[[2]][[4]][[3]]$Percent.Dead
for (i in 1:52){
alldata[[2]][[i]][[3]]$Percent.Dead
}
vecpc<-vector()
for (i in 1:52){
vecpc<-alldata[[2]][[i]][[3]]$Percent.Dead
}
vecpc
vecpc<-vector()
for (i in 1:52){
vecpc[i]<-alldata[[2]][[i]][[3]]$Percent.Dead
}
vecpc
vecpc<-vector()
for (i in 1:52){
vecpc[i]<-alldata[[2]][[i]][[3]]$FlowJoPercentDead
}
vecpc
vecpc<-vector()
veccon<-vector()
for (i in 1:52){
vecpc[i]<-alldata[[2]][[i]][[3]]$FlowJoPercentDead
veccon[i]<-alldata[[2]][[i]][[3]]$Concentration
}
veccon
dfbin<-cbind(vecpc, veccon)
dfbin
vecpc<-vector()
veccon<-vector();vectim<-vector()
for (i in 1:52){
vecpc[i]<-alldata[[2]][[i]][[3]]$FlowJoPercentDead
veccon[i]<-alldata[[2]][[i]][[3]]$Concentration
vectim[i]<-alldata[[2]][[i]][[3]]$Time
}
dfbin<-cbind(vecpc, veccon, vectim)
dfbin
?order
order(veccon =decreasing=F)
order(veccon,decreasing=F)
dfbin[with(dfbin, order(dfbin[,2], dfbin[,3])), ]
dfbin[with(dfbin, order(dfbin[,3])), ]
dfbin[with(dfbin, order(dfbin[,3]))]
as.dataframe(dfbin)
as.data.frame(dfbin)
dfbin2<-as.data.frame(dfbin)
order(dfbin2,decreasing=F)
dd[with(dd, order(veccon, vectim)), ]
dfbin2[with(dfbin2, order(veccon, vectim)), ]
as.data.frame(vecpc, veccon, vectim)
as.data.frame(a=(vecpc), b=(veccon), c(vectim))
as.data.frame(a=(vecpc), b=(veccon), c=(vectim))
for (g in 1:52){
for (i in 1:length(alldata[[2]])){
if (!is.na(alldata[[2]][[i]][[3]]$Concentration)){
if (alldata[[2]][[i]][[3]]$Time == vtime && alldata[[2]][[i]][[3]]$Time != "NaN"){
#     if (alldata[[2]][[i]][[3]]$Concentration == vcon) {
cherry.concentration.t4[[i]]<-alldata[[2]][[i]][[1]]$cherry[which(alldata[[2]][[i]][[1]]$cherry != "-Inf" && alldata[[2]][[i]][[1]]$cherry != "NaN" )]
cherry.concentration.t4.list[[g]][[i]]<-cherry.concentration.t4[i]
#       }
}
vtime=225
vcon=0
cherry.concentration.t4<-vector()
cherry.concentration.t4.list<-list()
for (g in 1:52){
for (i in 1:length(alldata[[2]])){
if (!is.na(alldata[[2]][[i]][[3]]$Concentration)){
if (alldata[[2]][[i]][[3]]$Time == vtime && alldata[[2]][[i]][[3]]$Time != "NaN"){
#     if (alldata[[2]][[i]][[3]]$Concentration == vcon) {
cherry.concentration.t4[[i]]<-alldata[[2]][[i]][[1]]$cherry[which(alldata[[2]][[i]][[1]]$cherry != "-Inf" && alldata[[2]][[i]][[1]]$cherry != "NaN" )]
cherry.concentration.t4.list[[g]][[i]]<-cherry.concentration.t4[i]
#       }
}
cherry.concentration.t4<-vector()
cherry.concentration.t4.list<-list()
for (g in 1:52){
for (i in 1:length(alldata[[2]])){
if (!is.na(alldata[[2]][[i]][[3]]$Concentration)){
if (alldata[[2]][[i]][[3]]$Time == vtime && alldata[[2]][[i]][[3]]$Time != "NaN"){
#     if (alldata[[2]][[i]][[3]]$Concentration == vcon) {
cherry.concentration.t4[[i]]<-alldata[[2]][[i]][[1]]$cherry[which(alldata[[2]][[i]][[1]]$cherry != "-Inf" && alldata[[2]][[i]][[1]]$cherry != "NaN" )]
#    cherry.concentration.t4.list[[g]][[i]]<-cherry.concentration.t4[i]
#       }
}
for (g in 1:5){
for (i in 1:5length(alldata[[2]])){
if (!is.na(alldata[[2]][[i]][[3]]$Concentration)){
if (alldata[[2]][[i]][[3]]$Time == vtime && alldata[[2]][[i]][[3]]$Time != "NaN"){
#     if (alldata[[2]][[i]][[3]]$Concentration == vcon) {
cherry.concentration.t4[[i]]<-alldata[[2]][[i]][[1]]$cherry[which(alldata[[2]][[i]][[1]]$cherry != "-Inf" && alldata[[2]][[i]][[1]]$cherry != "NaN" )]
#    cherry.concentration.t4.list[[g]][[i]]<-cherry.concentration.t4[i]
#       }
}
vtime=225
vcon=0
cherry.concentration.t4<-vector()
cherry.concentration.t4.list<-list()
for (g in 1:5){
for (i in 1:5length(alldata[[2]])){
if (!is.na(alldata[[2]][[i]][[3]]$Concentration)){
if (alldata[[2]][[i]][[3]]$Time == vtime && alldata[[2]][[i]][[3]]$Time != "NaN"){
#     if (alldata[[2]][[i]][[3]]$Concentration == vcon) {
cherry.concentration.t4[[i]]<-alldata[[2]][[i]][[1]]$cherry[which(alldata[[2]][[i]][[1]]$cherry != "-Inf" && alldata[[2]][[i]][[1]]$cherry != "NaN" )]
#    cherry.concentration.t4.list[[g]][[i]]<-cherry.concentration.t4[i]
#       }
}
cherry.concentration.t4<-vector()
cherry.concentration.t4.list<-list()
for (g in 1:5){
for (i in 1:5length(alldata[[2]])){
if (!is.na(alldata[[2]][[i]][[3]]$Concentration)){
if (alldata[[2]][[i]][[3]]$Time == vtime && alldata[[2]][[i]][[3]]$Time != "NaN"){
#     if (alldata[[2]][[i]][[3]]$Concentration == vcon) {
cherry.concentration.t4[[i]]<-alldata[[2]][[i]][[1]]$cherry#[which(alldata[[2]][[i]][[1]]$cherry != "-Inf" && alldata[[2]][[i]][[1]]$cherry != "NaN" )]
#    cherry.concentration.t4.list[[g]][[i]]<-cherry.concentration.t4[i]
#       }
}
for (g in 1:5){
for (i in 1:5length(alldata[[2]])){
if (!is.na(alldata[[2]][[i]][[3]]$Concentration)){
if (alldata[[2]][[i]][[3]]$Time == vtime && alldata[[2]][[i]][[3]]$Time != "NaN"){
#     if (alldata[[2]][[i]][[3]]$Concentration == vcon) {
#     cherry.concentration.t4[[i]]<-alldata[[2]][[i]][[1]]$cherry#[which(alldata[[2]][[i]][[1]]$cherry != "-Inf" && alldata[[2]][[i]][[1]]$cherry != "NaN" )]
#    cherry.concentration.t4.list[[g]][[i]]<-cherry.concentration.t4[i]
#       }
}
for (g in 1:5){
for (i in 1:5length(alldata[[2]])){
if (!is.na(alldata[[2]][[i]][[3]]$Concentration)){
if (alldata[[2]][[i]][[3]]$Time == vtime && alldata[[2]][[i]][[3]]$Time != "NaN"){
#     if (alldata[[2]][[i]][[3]]$Concentration == vcon) {
#     cherry.concentration.t4[[i]]<-alldata[[2]][[i]][[1]]$cherry#[which(alldata[[2]][[i]][[1]]$cherry != "-Inf" && alldata[[2]][[i]][[1]]$cherry != "NaN" )]
#    cherry.concentration.t4.list[[g]][[i]]<-cherry.concentration.t4[i]
#       }
}
for (g in 1:5){
for (i in 1:5){
if (!is.na(alldata[[2]][[i]][[3]]$Concentration)){
if (alldata[[2]][[i]][[3]]$Time == vtime && alldata[[2]][[i]][[3]]$Time != "NaN"){
#     if (alldata[[2]][[i]][[3]]$Concentration == vcon) {
#     cherry.concentration.t4[[i]]<-alldata[[2]][[i]][[1]]$cherry#[which(alldata[[2]][[i]][[1]]$cherry != "-Inf" && alldata[[2]][[i]][[1]]$cherry != "NaN" )]
#    cherry.concentration.t4.list[[g]][[i]]<-cherry.concentration.t4[i]
#       }
}
for (g in 1:5){
for (i in 1:5){
if (!is.na(alldata[[2]][[i]][[3]]$Concentration)){
if (alldata[[2]][[i]][[3]]$Time == vtime && alldata[[2]][[i]][[3]]$Time != "NaN"){
#     if (alldata[[2]][[i]][[3]]$Concentration == vcon) {
cherry.concentration.t4[[i]]<-alldata[[2]][[i]][[1]]$cherry#[which(alldata[[2]][[i]][[1]]$cherry != "-Inf" && alldata[[2]][[i]][[1]]$cherry != "NaN" )]
#    cherry.concentration.t4.list[[g]][[i]]<-cherry.concentration.t4[i]
#       }
}
for (i in 1:5){
if (!is.na(alldata[[2]][[i]][[3]]$Concentration)){
if (alldata[[2]][[i]][[3]]$Time == vtime && alldata[[2]][[i]][[3]]$Time != "NaN"){
#     if (alldata[[2]][[i]][[3]]$Concentration == vcon) {
cherry.concentration.t4[[i]]<-alldata[[2]][[i]][[1]]$cherry#[which(alldata[[2]][[i]][[1]]$cherry != "-Inf" && alldata[[2]][[i]][[1]]$cherry != "NaN" )]
#    cherry.concentration.t4.list[[g]][[i]]<-cherry.concentration.t4[i]
#       }
}
cherry.concentration.t4<-list()
cherry.concentration.t4.list<-list()
for (i in 1:5){
if (!is.na(alldata[[2]][[i]][[3]]$Concentration)){
if (alldata[[2]][[i]][[3]]$Time == vtime && alldata[[2]][[i]][[3]]$Time != "NaN"){
#     if (alldata[[2]][[i]][[3]]$Concentration == vcon) {
cherry.concentration.t4[[i]]<-alldata[[2]][[i]][[1]]$cherry#[which(alldata[[2]][[i]][[1]]$cherry != "-Inf" && alldata[[2]][[i]][[1]]$cherry != "NaN" )]
#    cherry.concentration.t4.list[[g]][[i]]<-cherry.concentration.t4[i]
#       }
}
cherry.concentration.t4
alldata[[2]][[2]][[1]]$cherry
alldata[[2]][[3]][[1]]$cherry
for (i in 1:5){
if (!is.na(alldata[[2]][[i]][[3]]$Concentration)){
#    if (alldata[[2]][[i]][[3]]$Time == vtime && alldata[[2]][[i]][[3]]$Time != "NaN"){
#     if (alldata[[2]][[i]][[3]]$Concentration == vcon) {
cherry.concentration.t4[[i]]<-alldata[[2]][[i]][[1]]$cherry#[which(alldata[[2]][[i]][[1]]$cherry != "-Inf" && alldata[[2]][[i]][[1]]$cherry != "NaN" )]
#    cherry.concentration.t4.list[[g]][[i]]<-cherry.concentration.t4[i]
#       }
#        }
}
cherry.concentration.t4
alldata[[2]][[4]][[1]]$cherry
cherry.concentration.t4<-list()
cherry.concentration.t4.list<-list()
for (i in 1:5){
if (!is.na(alldata[[2]][[i]][[3]]$Concentration)){
#    if (alldata[[2]][[i]][[3]]$Time == vtime && alldata[[2]][[i]][[3]]$Time != "NaN"){
#     if (alldata[[2]][[i]][[3]]$Concentration == vcon) {
cherry.concentration.t4[[i]]<-alldata[[2]][[i]][[1]]$cherry#[which(alldata[[2]][[i]][[1]]$cherry != "-Inf" && alldata[[2]][[i]][[1]]$cherry != "NaN" )]
#    cherry.concentration.t4.list[[g]][[i]]<-cherry.concentration.t4[i]
#       }
#        }
}
cherry.concentration.t4
cherry.concentration.t4<-list()
cherry.concentration.t4.list<-list()
for (i in 1:5){
if (!is.na(alldata[[2]][[i]][[3]]$Concentration)){
#    if (alldata[[2]][[i]][[3]]$Time == vtime && alldata[[2]][[i]][[3]]$Time != "NaN"){
#     if (alldata[[2]][[i]][[3]]$Concentration == vcon) {
cherry.concentration.t4[[i]]<-alldata[[2]][[i]][[1]]$cherry#[which(alldata[[2]][[i]][[1]]$cherry != "-Inf" && alldata[[2]][[i]][[1]]$cherry != "NaN" )]
#    cherry.concentration.t4.list[[g]][[i]]<-cherry.concentration.t4[i]
#       }
#        }
}
cherry.concentration.t4
alldata[[2]][[5]][[1]]$cherry
cherry.concentration.t4<-list()
cherry.concentration.t4.list<-list()
for (i in 1:5){
#if (!is.na(alldata[[2]][[i]][[3]]$Concentration)){
#    if (alldata[[2]][[i]][[3]]$Time == vtime && alldata[[2]][[i]][[3]]$Time != "NaN"){
#     if (alldata[[2]][[i]][[3]]$Concentration == vcon) {
cherry.concentration.t4[[i]]<-alldata[[2]][[i]][[1]]$cherry#[which(alldata[[2]][[i]][[1]]$cherry != "-Inf" && alldata[[2]][[i]][[1]]$cherry != "NaN" )]
#    cherry.concentration.t4.list[[g]][[i]]<-cherry.concentration.t4[i]
#       }
#        }
# }
}
cherry.concentration.t4
cherry.concentration.null<-list()
for (i in 1:5){
if (!is.na(alldata[[2]][[i]][[3]]$Concentration)){
#    if (alldata[[2]][[i]][[3]]$Time == vtime && alldata[[2]][[i]][[3]]$Time != "NaN"){
if (alldata[[2]][[i]][[3]]$Concentration == vcon) {
cherry.concentration.t4[[i]]<-alldata[[2]][[i]][[1]]$cherry#[which(alldata[[2]][[i]][[1]]$cherry != "-Inf" && alldata[[2]][[i]][[1]]$cherry != "NaN" )]
#    cherry.concentration.t4.list[[g]][[i]]<-cherry.concentration.t4[i]
#       }
#        }
}
}else{cherry.concentration.null[[i]]<-alldata[[2]][[i]][[1]]$cherry}
}
cherry.concentration.t4
for (i in 1:5){
if (alldata[[2]][[i]][[3]]$Concentration == vcon) {
cherry.concentration.t4[[i]]<-alldata[[2]][[i]][[1]]$cherry#[which(alldata[[2]][[i]][[1]]$cherry != "-Inf" && alldata[[2]][[i]][[1]]$cherry != "NaN" )]
}
}else{
cherry.concentration.null[[i]]<-alldata[[2]][[i]][[1]]$cherry
}
for (i in 1:5){
if (alldata[[2]][[i]][[3]]$Concentration == vcon) {
cherry.concentration.t4[[i]]<-alldata[[2]][[i]][[1]]$cherry#[which(alldata[[2]][[i]][[1]]$cherry != "-Inf" && alldata[[2]][[i]][[1]]$cherry != "NaN" )]
}else{
cherry.concentration.null[[i]]<-alldata[[2]][[i]][[1]]$cherry
}
for (i in 1:5){
if (!is.na(alldata[[2]][[i]][[3]]$Concentration)){
if (alldata[[2]][[i]][[3]]$Concentration == vcon) {
cherry.concentration.t4[[i]]<-alldata[[2]][[i]][[1]]$cherry#[which(alldata[[2]][[i]][[1]]$cherry != "-Inf" && alldata[[2]][[i]][[1]]$cherry != "NaN" )]
}else{
cherry.concentration.null[[i]]<-alldata[[2]][[i]][[1]]$cherry
}
vcon2=0
for (i in 1:5){
if (!is.na(alldata[[2]][[i]][[3]]$Concentration)){
if (alldata[[2]][[i]][[3]]$Concentration == vcon) {
cherry.concentration.t4[[i]]<-alldata[[2]][[i]][[1]]$cherry#[which(alldata[[2]][[i]][[1]]$cherry != "-Inf" && alldata[[2]][[i]][[1]]$cherry != "NaN" )]
tag<-paste('item:',vcon2,i,sep='')
}else{
cherry.concentration.null[[i]]<-alldata[[2]][[i]][[1]]$cherry
}
for (i in 1:5){
if (!is.na(alldata[[2]][[i]][[3]]$Concentration)){
if (alldata[[2]][[i]][[3]]$Concentration == vcon) {
cherry.concentration.t4[[i]]<-alldata[[2]][[i]][[1]]$cherry#[which(alldata[[2]][[i]][[1]]$cherry != "-Inf" && alldata[[2]][[i]][[1]]$cherry != "NaN" )]
tag<-paste('item:',vcon2,i,sep='')
#cherry.concentration.t4.list[[tag]]<-
}else{
cherry.concentration.null[[i]]<-alldata[[2]][[i]][[1]]$cherry
}
cherry.concentration.t4
for (i in 1:5){
if (!is.na(alldata[[2]][[i]][[3]]$Concentration)){
if (alldata[[2]][[i]][[3]]$Concentration == vcon) {
#cherry.concentration.t4[[i]]<-alldata[[2]][[i]][[1]]$cherry#[which(alldata[[2]][[i]][[1]]$cherry != "-Inf" && alldata[[2]][[i]][[1]]$cherry != "NaN" )]
tag<-paste('item:',vcon2,i,sep='')
cherry.concentration.t4.[[tag]]<-alldata[[2]][[i]][[1]]$cherry#[which(alldata[[2]][[i]][[1]]$cherry != "-Inf" && alldata[[2]][[i]][[1]]$cherry != "NaN" )]
}else{
cherry.concentration.null[[i]]<-alldata[[2]][[i]][[1]]$cherry
}
for (i in 1:5){
if (!is.na(alldata[[2]][[i]][[3]]$Concentration)){
if (alldata[[2]][[i]][[3]]$Concentration == vcon) {
#cherry.concentration.t4[[i]]<-alldata[[2]][[i]][[1]]$cherry#[which(alldata[[2]][[i]][[1]]$cherry != "-Inf" && alldata[[2]][[i]][[1]]$cherry != "NaN" )]
tag<-paste('item:',vcon2,i,sep='')
cherry.concentration.t4[[tag]]<-alldata[[2]][[i]][[1]]$cherry#[which(alldata[[2]][[i]][[1]]$cherry != "-Inf" && alldata[[2]][[i]][[1]]$cherry != "NaN" )]
}else{
cherry.concentration.null[[i]]<-alldata[[2]][[i]][[1]]$cherry
}
cherry.concentration.t4
for (i in 1:5){
if (!is.na(alldata[[2]][[i]][[3]]$Concentration)){
if (alldata[[2]][[i]][[3]]$Concentration == vcon) {
#cherry.concentration.t4[[i]]<-alldata[[2]][[i]][[1]]$cherry#[which(alldata[[2]][[i]][[1]]$cherry != "-Inf" && alldata[[2]][[i]][[1]]$cherry != "NaN" )]
tag<-paste('item:',vcon2,i,sep=' ')
cherry.concentration.t4[[tag]]<-alldata[[2]][[i]][[1]]$cherry#[which(alldata[[2]][[i]][[1]]$cherry != "-Inf" && alldata[[2]][[i]][[1]]$cherry != "NaN" )]
}else{
cherry.concentration.null[[i]]<-alldata[[2]][[i]][[1]]$cherry
}
cherry.concentration.t4
for (i in 1:5){
if (!is.na(alldata[[2]][[i]][[3]]$Concentration)){
if (alldata[[2]][[i]][[3]]$Concentration == vcon) {
#cherry.concentration.t4[[i]]<-alldata[[2]][[i]][[1]]$cherry#[which(alldata[[2]][[i]][[1]]$cherry != "-Inf" && alldata[[2]][[i]][[1]]$cherry != "NaN" )]
tag<-paste('well:',i,'Con:',vcon,sep=' ')
cherry.concentration.t4[[tag]]<-alldata[[2]][[i]][[1]]$cherry#[which(alldata[[2]][[i]][[1]]$cherry != "-Inf" && alldata[[2]][[i]][[1]]$cherry != "NaN" )]
}else{
cherry.concentration.null[[i]]<-alldata[[2]][[i]][[1]]$cherry
}
cherry.concentration.t4
for (i in 1:52){
if (!is.na(alldata[[2]][[i]][[3]]$Concentration)){
if (alldata[[2]][[i]][[3]]$Concentration == vcon) {
#cherry.concentration.t4[[i]]<-alldata[[2]][[i]][[1]]$cherry#[which(alldata[[2]][[i]][[1]]$cherry != "-Inf" && alldata[[2]][[i]][[1]]$cherry != "NaN" )]
tag<-paste('well:',i,'Con:',vcon,sep=' ')
cherry.concentration.t4[[tag]]<-alldata[[2]][[i]][[1]]$cherry#[which(alldata[[2]][[i]][[1]]$cherry != "-Inf" && alldata[[2]][[i]][[1]]$cherry != "NaN" )]
}else{
cherry.concentration.null[[i]]<-alldata[[2]][[i]][[1]]$cherry
}
cherry.concentration.t4
cherry.concentration.t4<-list()
for (i in 1:52){
if (!is.na(alldata[[2]][[i]][[3]]$Concentration)){
if (alldata[[2]][[i]][[3]]$Concentration == vcon) {
#cherry.concentration.t4[[i]]<-alldata[[2]][[i]][[1]]$cherry#[which(alldata[[2]][[i]][[1]]$cherry != "-Inf" && alldata[[2]][[i]][[1]]$cherry != "NaN" )]
tag<-paste('well:',i,'Con:',vcon,sep=' ')
cherry.concentration.t4[[tag]]<-alldata[[2]][[i]][[1]]$cherry#[which(alldata[[2]][[i]][[1]]$cherry != "-Inf" && alldata[[2]][[i]][[1]]$cherry != "NaN" )]
}else{
cherry.concentration.null[[i]]<-alldata[[2]][[i]][[1]]$cherry
}
cherry.concentration.t4
length(cherry.concentration.t4)
length(cherry.concentration.null)
cherry.concentration.null<-list()
cherry.concentration.t4<-list()
for (i in 1:52){
if (!is.na(alldata[[2]][[i]][[3]]$Concentration)){
if (alldata[[2]][[i]][[3]]$Concentration == vcon) {
#cherry.concentration.t4[[i]]<-alldata[[2]][[i]][[1]]$cherry#[which(alldata[[2]][[i]][[1]]$cherry != "-Inf" && alldata[[2]][[i]][[1]]$cherry != "NaN" )]
tag<-paste('well:',i,'Con:',vcon,sep=' ')
cherry.concentration.t4[[tag]]<-alldata[[2]][[i]][[1]]$cherry#[which(alldata[[2]][[i]][[1]]$cherry != "-Inf" && alldata[[2]][[i]][[1]]$cherry != "NaN" )]
}else{
cherry.concentration.null[[i]]<-alldata[[2]][[i]][[1]]$cherry
}
length(cherry.concentration.t4)
length(cherry.concentration.null)
for (i in 1:length(cherry.concentration.t4)){
if (alldata[[2]][[i]][[3]]$Time == vtime2) {
#cherry.concentration.t4[[i]]<-alldata[[2]][[i]][[1]]$cherry#[which(alldata[[2]][[i]][[1]]$cherry != "-Inf" && alldata[[2]][[i]][[1]]$cherry != "NaN" )]
tag<-paste('well:',i,'Con:',vcon,sep=' ')
cherry.concentration.time[[tag]]<-alldata[[2]][[i]][[1]]$cherry#[which(alldata[[2]][[i]][[1]]$cherry != "-Inf" && alldata[[2]][[i]][[1]]$cherry != "NaN" )]
}else{
cherry.concentration.null[[i]]<-alldata[[2]][[i]][[1]]$cherry
}
vtime2=225
for (i in 1:length(cherry.concentration.t4)){
if (alldata[[2]][[i]][[3]]$Time == vtime2) {
#cherry.concentration.t4[[i]]<-alldata[[2]][[i]][[1]]$cherry#[which(alldata[[2]][[i]][[1]]$cherry != "-Inf" && alldata[[2]][[i]][[1]]$cherry != "NaN" )]
tag<-paste('well:',i,'Con:',vcon,sep=' ')
cherry.concentration.time[[tag]]<-alldata[[2]][[i]][[1]]$cherry#[which(alldata[[2]][[i]][[1]]$cherry != "-Inf" && alldata[[2]][[i]][[1]]$cherry != "NaN" )]
}else{
cherry.concentration.null[[i]]<-alldata[[2]][[i]][[1]]$cherry
}
cherry.concentration.time<-list()
for (i in 1:length(cherry.concentration.t4)){
if (alldata[[2]][[i]][[3]]$Time == vtime2) {
#cherry.concentration.t4[[i]]<-alldata[[2]][[i]][[1]]$cherry#[which(alldata[[2]][[i]][[1]]$cherry != "-Inf" && alldata[[2]][[i]][[1]]$cherry != "NaN" )]
tag<-paste('well:',i,'Con:',vcon,sep=' ')
cherry.concentration.time[[tag]]<-alldata[[2]][[i]][[1]]$cherry#[which(alldata[[2]][[i]][[1]]$cherry != "-Inf" && alldata[[2]][[i]][[1]]$cherry != "NaN" )]
}else{
cherry.concentration.null[[i]]<-alldata[[2]][[i]][[1]]$cherry
}
for (i in 1:length(cherry.concentration.t4)){
if (!is.na(alldata[[2]][[i]][[3]]$Concentration)){
if (alldata[[2]][[i]][[3]]$Time == vtime2) {
#cherry.concentration.t4[[i]]<-alldata[[2]][[i]][[1]]$cherry#[which(alldata[[2]][[i]][[1]]$cherry != "-Inf" && alldata[[2]][[i]][[1]]$cherry != "NaN" )]
tag<-paste('well:',i,'Con:',vcon,sep=' ')
cherry.concentration.time[[tag]]<-alldata[[2]][[i]][[1]]$cherry#[which(alldata[[2]][[i]][[1]]$cherry != "-Inf" && alldata[[2]][[i]][[1]]$cherry != "NaN" )]
}
length(cherry.concentration.time)
weight.i <- 0.01*matrix(rnorm(layer.size(i)*layer.size(i+1)),
nrow=layer.size(i),
ncol=layer.size(i+1))
for (i in 1:4){
weight.i <- 0.01*matrix(rnorm(layer.size(i)*layer.size(i+1)),
nrow=layer.size(i),
ncol=layer.size(i+1))
bias.i    <- matrix(0, nrow=1, ncol = layer.size(i))
}
library(nnet)
for (i in 1:4){
weight.i <- 0.01*matrix(rnorm(layer.size(i)*layer.size(i+1)),
nrow=layer.size(i),
ncol=layer.size(i+1))
bias.i    <- matrix(0, nrow=1, ncol = layer.size(i))
}
pdf("e1_boxplot_conf.pdf")
x<-read.table("~/e1.GT_CONF.FORMAT", sep="\t", header = T)
boxplot(log10(x[,3:8]), xlab="samples", ylab="GT conf (log10)", las=1)
devoff()
dev.off()
quit()
rm(list=ls(all=TRUE))
source("https://raw.githubusercontent.com/ggrothendieck/gsubfn/master/R/list.R")
setwd("~/msk-snp-cdgmp/cdg-data/")
snp.data<-read.csv("cdgSNPmatrix-Jinyuan.csv", sep =",", header = T, row.names = 1)
t.snp.data<-t(snp.data)
cdgmp.data<-read.csv("cdgTable.csv2", sep =",", header =T)
gene1 <- read.csv("snp-mei.csv", header = F, row.names = 1)
header <- read.csv("header.csv", header = F)
colnames(gene1) <- as.character(as.matrix(header[2:31]))
t.gene<-t(gene1)
m.cdgmp<-tapply(cdgmp.data$logcdg,cdgmp.data$strains,mean )
names(m.cdgmp)[16]<-gsub("pa_.+_", "", names(m.cdgmp)[16])
m.cdgmp<-m.cdgmp[row.names(t.gene)]
t1 <- as.matrix(ifelse(m.cdgmp > -.5, 1,0 ))
t2 <- as.matrix(ifelse(m.cdgmp < -.5 & m.cdgmp > -1.5, 1,0))
t3 <- as.matrix(ifelse(m.cdgmp  < -1.5 , 1,0 ))
snps<-t(gene1)
targets<-cbind(t1,t2,t3)
weight_bias<-NULL
for(i in 1:3){
w <- runif(1078, 1e-3, 1e-2)
b <- runif(1)
weight_bias<-cbind(weight_bias,as.matrix(c(w,b)))
}
dim(weight_bias)
dim(snps2)
snps2<-cbind(snps,rep(1,30))
eta=0.1#the learning rate
wdf=data.frame(w1=numeric(), w2=numeric(),w3=numeric(),w4=numeric(), b=numeric())
nwdf<-list(wdf,wdf,wdf)
accuracy<-list()
for (generation in 1:1000){
linear.combination<-snps2 %*% weight_bias
y <- exp(linear.combination) / rowSums(exp(linear.combination))
e<-targets-y
for (neuron in 1:3){
weight_bias[5,neuron]=weight_bias[5,neuron]-eta*(-sum(e[,neuron])/30)
for (weight in 1:1078){
gc<-snps2[,weight]*e[,neuron]
weight_bias[weight,neuron]=weight_bias[weight,neuron] - eta* (-sum(gc)/30)
}
nwdf[[neuron]]<-rbind(nwdf[[neuron]],t(weight_bias)[neuron,])
}
accuracy[[generation]]<-length(which(max.col(y)==max.col(targets)))/30
}
plot(0:0, xlim = c(1,1000), ylim=c(-.4,.6) ,ylab= "weights", xlab="Epochs", main = "Weight Updates")
rm(list=ls(all=TRUE))
quit()
